{"version":3,"file":"simple-middleware-manager.mjs","sources":["../src/logger.js","../src/index.js"],"sourcesContent":["import createLogger from 'debug-composer';\nconst logger = createLogger('simple-middleware-manager');\n\nexport default logger;\n","import logger from './logger';\n\nconst createCallbackHandler = (autoMode = false) => {\n  const callbackHandler = {\n    callbacks: {},\n    middlewares: {},\n    on(event, cb) {\n      if (typeof event !== 'string') {\n        throw new Error('Event name must be a string');\n      }\n      if (typeof cb !== 'function') {\n        throw new Error('Callback must be a function');\n      }\n      if (!callbackHandler.callbacks[event]) {\n        callbackHandler.callbacks[event] = [];\n      }\n      logger.info(`Adding callback for ${event} event`, cb);\n      callbackHandler.callbacks[event].push(cb);\n    },\n    use(event, cb) {\n      if (typeof event !== 'string') {\n        throw new Error('Event name must be a string');\n      }\n      if (typeof cb !== 'function') {\n        throw new Error('Middleware must be a function');\n      }\n      if (!callbackHandler.middlewares[event]) {\n        callbackHandler.middlewares[event] = [];\n      }\n      logger.info(`Adding middleware for ${event} event`, cb);\n      callbackHandler.middlewares[event].push(cb);\n    },\n    remove(event, cb) {\n      if (typeof event !== 'string') {\n        throw new Error('Event name must be a string');\n      }\n      if (typeof cb !== 'function') {\n        throw new Error('Callback must be a function');\n      }\n      if (!callbackHandler.callbacks[event] && !callbackHandler.middlewares[event]) {\n        throw new Error(`Event ${event} not found`);\n      }\n\n      let foundListeners = 0;\n      let foundMiddlewares = 0;\n      if (callbackHandler.callbacks[event]) {\n        for (let i = 0; i < callbackHandler.callbacks[event].length;) {\n          if (callbackHandler.callbacks[event][i] === cb) {\n            foundListeners++;\n            callbackHandler.callbacks[event].splice(i, 1);\n            continue;\n          }\n          i++;\n        }\n      }\n      if (callbackHandler.middlewares[event]) {\n        for (let i = 0; i < callbackHandler.middlewares[event].length;) {\n          if (callbackHandler.middlewares[event][i] === cb) {\n            foundMiddlewares++;\n            callbackHandler.middlewares[event].splice(i, 1);\n            continue;\n          }\n          i++;\n        }\n      }\n\n      logger.info(`Removed ${foundListeners} ${foundListeners === 1 ? 'listener' : 'listeners'} and ${foundMiddlewares} ${foundMiddlewares === 1 ? 'middleware' : 'middlewares'}`);\n    },\n    clearListeners() {\n      callbackHandler.callbacks = {};\n      logger.info('Registered listeners list cleared');\n    },\n    clearMiddlewares() {\n      callbackHandler.middlewares = {};\n      logger.info('Registered middlewares list cleared');\n    },\n    off(event, cb) {\n      return callbackHandler.remove(event, cb);\n    },\n    unuse(event, cb) {\n      return callbackHandler.remove(event, cb);\n    },\n    trigger(event, data) {\n      if (callbackHandler.callbacks[event]) {\n        callbackHandler.callbacks[event].forEach(cb => cb(data));\n      }\n      if (callbackHandler.middlewares[event]) {\n        const next = index => () => {\n          if (callbackHandler.middlewares[event][index]) {\n            if (!autoMode || callbackHandler.middlewares[event][index].length > 1) {\n              callbackHandler.middlewares[event][index](data, next(index + 1));\n            } else {\n              callbackHandler.middlewares[event][index](data);\n              next(index + 1)();\n            }\n          }\n        };\n        return callbackHandler.middlewares[event][0](data, next(1));\n      }\n    },\n  };\n  return callbackHandler;\n};\n\nexport default createCallbackHandler;\n"],"names":["logger","createLogger","createCallbackHandler","autoMode","callbackHandler","event","cb","Error","callbacks","info","push","middlewares","foundListeners","foundMiddlewares","i","length","splice","remove","data","forEach","next","index"],"mappings":"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"}